generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Organizer {
  id                    Int      @id @default(autoincrement())
  email                 String   @unique
  password              String
  name                  String
  phone                 String?
  emailVerified         Boolean  @default(false)
  phoneVerified         Boolean  @default(false)
  adminApproved         Boolean  @default(false)
  approvedAt            DateTime?
  approvedBy            String?  // admin user identifier
  stripeAccountId       String?
  stripeOnboardingCompleted Boolean @default(false)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  events                Event[]
  emailVerifications    EmailVerification[]

  @@map("organizers")
}

model EmailVerification {
  id          Int      @id @default(autoincrement())
  token       String   @unique
  email       String
  organizerId Int?
  expiresAt   DateTime
  usedAt      DateTime?
  createdAt   DateTime @default(now())

  organizer   Organizer? @relation(fields: [organizerId], references: [id], onDelete: Cascade)

  @@map("email_verifications")
}

model Event {
  id            Int           @id @default(autoincrement())
  name          String
  date          DateTime
  location      String
  totalCost     Float
  maxPlayers    Int
  pricePerPlayer Float
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  organizerId   Int
  organizer     Organizer     @relation(fields: [organizerId], references: [id], onDelete: Cascade)
  participants  Participant[]

  @@map("events")
}

model Participant {
  id                    Int     @id @default(autoincrement())
  name                  String
  email                 String?
  paymentStatus         String  @default("pending") // "pending", "succeeded", "failed"
  stripePaymentIntentId String?
  createdAt            DateTime @default(now())

  eventId              Int
  event                Event   @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@map("participants")
}